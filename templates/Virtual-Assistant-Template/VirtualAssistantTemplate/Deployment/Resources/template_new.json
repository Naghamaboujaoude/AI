{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "name": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "microsoftAppId":{
            "type": "string"
        },
        "microsoftAppPassword":{
            "type": "string"
        },
        "cosmosDbName": {
            "type": "string",
            "defaultValue": "[toLower(parameters('name'))]"
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[toLower(parameters('name'))]"
        },
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "[parameters('name')]"
        },
        "appServicePlanSku":{
            "type": "object",
            "defaultValue": {
                "tier": "Standard",
                "name": "S1"
            }
        },
        "appInsightsName": {
            "type": "string",
            "defaultValue": "[parameters('name')]"
        },
        "appInsightsLocation":{
            "type": "string",
            "defaultValue": "westus2"
        },
        "botWebAppName": {
            "type": "string",
            "defaultValue": "[parameters('name')]"
        },
        "contentModeratorName": {
            "type": "string",
            "defaultValue": "[concat(parameters('name'), '-cm')]"
        },
        "contentModeratorSku": {
            "type": "string",
            "defaultValue": "S0"
        },
        "luisServiceName": {
            "type": "string",
            "defaultValue": "[concat(parameters('name'), '-luis')]"
        },
        "luisServiceSku": {
            "type": "string",
            "defaultValue": "S0"
        },
        "qnaMakerServiceName": {
            "type": "string",
            "defaultValue": "[concat(parameters('name'), '-qna')]"
        },
        "qnaMakerServiceSku": {
            "type": "string",
            "defaultValue": "S0"
        },
        "qnaMakerSearchName": {
            "type": "string",
            "defaultValue": "[toLower(concat(parameters('name'), '-search'))]"
        },
        "qnaMakerSearchSku": {
            "type": "string",
            "defaultValue": "standard"
        },
        "qnaMakerWebAppName": {
            "type": "string",
            "defaultValue": "[concat(parameters('name'), '-qnahost')]"
        }
    },
    "variables": {
        "botEndpoint" : "[concat('https://', toLower(parameters('botWebAppName')), '.azurewebsites.net/api/messages')]"
    },
    "resources": [
        {
            "comments": "CosmosDB for bot state.",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "kind": "GlobalDocumentDB",
            "apiVersion": "2015-04-08",
            "name": "[parameters('cosmosDbName')]",
            "location": "[parameters('location')]",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "locationName": "[parameters('location')]",
                        "failoverPriority": 0
                    }
                ]
            }
        },
        {
            "comments": "storage account",
            "type": "Microsoft.Storage/storageAccounts",
            "kind": "StorageV2",
            "apiVersion": "2018-07-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            }
        },
        {
            "comments": "app service plan",
            "type": "Microsoft.Web/serverFarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('appServicePlanName')]",
            "location":"[parameters('location')]",
            "sku": "[parameters('appServicePlanSku')]",
            "properties": {}
        },
        {
            "comments": "app insights",
            "type": "Microsoft.Insights/components",
            "kind": "web",
            "apiVersion": "2015-05-01",
            "name": "[parameters('appInsightsName')]",
            "location": "[parameters('appInsightsLocation')]",
            "properties":{
                "Application_Type": "web"
            }
        },
        {
            "comments": "bot web app",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-02-01",
            "name": "[parameters('botWebAppName')]",
            "location":"[parameters('location')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "siteConfig":{
                    "appSettings": [
                        {
                            "name": "MicrosoftAppId",
                            "value": "[parameters('microsoftAppId')]"
                        },
                        {
                            "name": "MicrosoftAppPassword",
                            "value": "[parameters('microsoftAppPassword')]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            ]
        },
        {
            "comments": "Content Moderator service for detecting PII and racy content.",
            "type": "Microsoft.CognitiveServices/accounts",
            "kind": "ContentModerator",
            "apiVersion": "2017-04-18",
            "name": "[parameters('contentModeratorName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('contentModeratorSku')]"
            },
            "properties": {}
        },
        {
            "comments": "Cognitive service key for all LUIS apps.",
            "type": "Microsoft.CognitiveServices/accounts",
            "kind": "LUIS",
            "apiVersion": "2017-04-18",
            "name": "[parameters('luisServiceName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('luisServiceSku')]"
            },
            "properties": {}
        },
        {
            "comments": "Cognitive service key for all QnA Maker knowledgebases.",
            "type": "Microsoft.CognitiveServices/accounts",
            "kind": "QnAMaker",
            "apiVersion": "2017-04-18",
            "name": "[parameters('qnaMakerServiceName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('qnaMakerServiceSku')]"
            },
            "properties": {
                "apiProperties": {
                    "qnaRuntimeEndpoint": "[concat('https://',reference(resourceId('Microsoft.Web/sites', parameters('qnaMakerWebAppName'))).hostNames[0])]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', parameters('qnaMakerWebAppName'))]",
                "[resourceId('Microsoft.Search/searchServices/', parameters('qnaMakerSearchName'))]",
                "[resourceId('microsoft.insights/components/', parameters('appInsightsName'))]"
            ]
        },
        {
            "comments": "Search service for QnA Maker service.",
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2015-08-19",
            "name": "[parameters('qnaMakerSearchName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('qnaMakerSearchSku')]"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "default"
            }
        },
        {
            "comments": "Web app for QnA Maker service.",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "name": "[parameters('qnaMakerWebAppName')]",
            "location": "[parameters('location')]",
            "properties": {
                "enabled": true,
                "name": "[parameters('qnaMakerWebAppName')]",
                "hostingEnvironment": "",
                "serverFarmId": "[concat('/subscriptions/', subscription().id,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', parameters('appServicePlanName'))]",
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('appServicePlanName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2016-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('qnaMakerWebAppName'))]",
                        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
                        "[resourceId('Microsoft.Search/searchServices/', parameters('qnaMakerSearchName'))]"
                    ],
                    "properties": {
                        "AzureSearchName": "[parameters('qnaMakerSearchName')]",
                        "AzureSearchAdminKey": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', parameters('qnaMakerSearchName')), '2015-08-19').primaryKey]",
                        "UserAppInsightsKey": "[reference(resourceId('Microsoft.Insights/components/', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]",
                        "UserAppInsightsName": "[parameters('appInsightsName')]",
                        "UserAppInsightsAppId": "[reference(resourceId('Microsoft.Insights/components/', parameters('appInsightsName')), '2015-05-01').AppId]",
                        "PrimaryEndpointKey": "[concat(parameters('qnaMakerWebAppName'), '-PrimaryEndpointKey')]",
                        "SecondaryEndpointKey": "[concat(parameters('qnaMakerWebAppName'), '-SecondaryEndpointKey')]",
                        "DefaultAnswer": "No good match found in KB.",
                        "QNAMAKER_EXTENSION_VERSION": "latest"
                    }
                }
            ]
        }
    ],
    "outputs": {
        "bot":{
            "type": "object",
            "value": {
                "endpoint": "[variables('botEndpoint')]"
            }
        },
        "appInsights":{
            "type": "object",
            "value": {
                "appId": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).AppId]",
                "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName'))).InstrumentationKey]"
            }
        },
        "storage":{
            "type": "object",
            "value": {
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2018-07-01').keys[0].value, ';EndpointSuffix=core.windows.net')]",
                "container": "transcripts"
            }
        },
        "cosmosDb": {
            "type": "object",
            "value": {
                "endpoint": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName'))).documentEndpoint]",
                "key": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbName')), '2015-04-08').primaryMasterKey]",
                "database":"botstate-db",
                "collection":"botstate-collection"
            }
        },
        "luis": {
            "type": "object",
            "value": {
                "key": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('luisServiceName')),'2017-04-18').key1]"
            }
        },
        "qnaMaker": {
            "type": "object",
            "value": {
                "endpoint": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('qnaMakerWebAppName'))).hostNames[0])]",
                "key": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('qnaMakerServiceName')),'2017-04-18').key1]"
            }
        },
        "contentModerator": {
            "type": "object",
            "value": {
                "key": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('contentModeratorName')),'2017-04-18').key1]"
            }
        }
    }
}